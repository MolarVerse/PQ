name: Daily CI Build & Test

on:
  schedule:
    # Run daily at 2:00 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  daily-build-and-test:
    strategy:
      matrix:
        os: [ubuntu-24.04]
        build: [Release]
      fail-fast: false # Continue other jobs even if one fails
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install gcc-13 g++-13
        shell: bash

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install numpy
        shell: bash

      - name: Install coverage tools (Debug only)
        if: matrix.build == 'Debug'
        run: |
          python -m pip install coverage gcovr
        shell: bash

      - name: Build project
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build }} \
                -DBUILD_WITH_TESTS=ON \
                ${{ matrix.build == 'Debug' && '-DBUILD_WITH_GCOVR=ON' || '' }} \
                ..
          make -j$(nproc)
        env:
          CC: gcc-13
          CXX: g++-13

      - name: Run unit tests
        run: |
          cd build
          ctest --output-on-failure --parallel $(nproc)
        continue-on-error: true # Log failures but don't stop the workflow

      - name: Generate coverage report (Debug only)
        if: matrix.build == 'Debug'
        run: |
          cd build
          make coverage_xml
        continue-on-error: true

      - name: Setup Conda for integration tests
        if: matrix.build == 'Release'
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: '3.12'
          activate-environment: integration-env
          channels: default, conda-forge
          auto-activate-base: false

      - name: Install integration test dependencies
        if: matrix.build == 'Release'
        shell: bash -l {0}
        run: |
          pip install pytest pytest-cov pqanalysis ase pyscf==2.9.0
          conda install conda-forge::dftbplus
        continue-on-error: true

      - name: Run integration tests
        if: matrix.build == 'Release'
        shell: bash -l {0}
        run: |
          pytest integration_tests --tb=short -v
        continue-on-error: true

      - name: Upload coverage report
        if: matrix.build == 'Debug'
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
          gcov: true
          gcov_executable: gcov-13
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true

  notification:
    needs: daily-build-and-test
    runs-on: ubuntu-latest
    if: always() # Run even if previous jobs fail
    
    steps:
      - name: Check job results
        run: |
          echo "Daily CI Results:"
          echo "Build jobs status: ${{ needs.daily-build-and-test.result }}"
          
          if [[ "${{ needs.daily-build-and-test.result }}" != "success" ]]; then
            echo "❌ Some daily CI jobs failed. Check the workflow logs for details."
            exit 1
          else
            echo "✅ All daily CI jobs completed successfully."
          fi